# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      kubectl_version:
        description: 'Version of kubectl to be installed'
        # Default value if no value is explicitly provided
        default: '1.19.9'
        # Input has to be provided for the workflow to run
        required: true
      input_configmap:
        description: |
          ConfigMap to apply. Content is base64 encoded.
          Use following command to generate base64 code:
            cat <<EOF | base64 | tr -d '\n' | xargs echo
            <your_configmap_yaml>
            EOF
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Setup environment needed
  setup_environment:
    # Use dev environment
    environment: dev_env
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Environment variables
    env:
      CONFIGMAP: ${{ github.event.inputs.input_configmap }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Install kubectl tool
    - name: Setup kubectl
      # You may pin to the exact commit or the version.
      # uses: ThomasKliszowski/setup-kubectl@525244f0d23a44bdb09d4c150c2f84b6705780c1
      uses: ThomasKliszowski/setup-kubectl@v1
      with:
        # Base64 encoded kube config
        kube-config: ${{ secrets.KUBE_CONFIG }}
        # Kube version used to download kubectl executable, defaults to latest
        kube-version: ${{ github.event.inputs.kubectl_version }}
    # Check install result
    - name: Check installed kubectl
      run: |
        kubectl version
    # Check input ConfigMap
    - name: Check input ConfigMap
      run: |
        if [ -z "$CONFIGMAP" ]
        then
          echo "No ConfigMap is input!"
        else
          echo "$CONFIGMAP" | base64 -d | kubectl apply -f - --dry-run=client -o yaml
        fi
